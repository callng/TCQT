name: Build TCQT

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - 'renovate.json'
      - '.editorconfig'
      - '.gitignore'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') && github.ref == 'refs/heads/main' }}
    outputs:
      release_sha: ${{ steps.export_apk.outputs.RELEASE_SHA }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build Release
        run: |
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          echo ${{ secrets.SIGN_KEYSTORE_BASE64 }} | base64 -d > keystore.jks
          chmod +x ./gradlew
          ./gradlew :app:assembleRelease --build-cache --parallel --no-daemon --stacktrace
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Export APK Path and SHA
        id: export_apk
        run: |
          release_apk=$(find app/build/outputs/apk/release -iname '*.apk' | head -n1)
          release_sha=$(sha256sum "$release_apk" | awk '{print $1}')
          echo "RELEASE_APK=$release_apk" >> $GITHUB_ENV
          echo "RELEASE_SHA=$release_sha" >> $GITHUB_ENV
          echo "RELEASE_SHA=$release_sha" >> $GITHUB_OUTPUT

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_APK }}
          name: TCQT-Release-${{ env.SHORT_SHA }}

  build-debug:
    name: Build Debug
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      debug_sha: ${{ steps.export_apk.outputs.DEBUG_SHA }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
        with:
          submodules: true
          fetch-depth: 1

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build Debug
        run: |
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          sed -i 's/org.gradle.configuration-cache=true//g' gradle.properties
          echo ${{ secrets.SIGN_KEYSTORE_BASE64 }} | base64 -d > keystore.jks
          chmod +x ./gradlew
          ./gradlew :app:assembleDebug --build-cache --parallel --no-daemon --stacktrace
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Export APK Path and SHA
        id: export_apk
        run: |
          debug_apk=$(find app/build/outputs/apk/debug -iname '*.apk' | head -n1)
          debug_sha=$(sha256sum "$debug_apk" | awk '{print $1}')
          echo "DEBUG_APK=$debug_apk" >> $GITHUB_ENV
          echo "DEBUG_SHA=$debug_sha" >> $GITHUB_ENV
          echo "DEBUG_SHA=$debug_sha" >> $GITHUB_OUTPUT

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.DEBUG_APK }}
          name: TCQT-Debug-${{ env.SHORT_SHA }}

  summarize:
    name: ðŸ“Š Summary
    runs-on: ubuntu-24.04
    needs: [build-release, build-debug]
    steps:
      - name: Show Build Summary
        run: |
          echo "### âœ… Build Completed :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "|Variant|SHA256|" >> $GITHUB_STEP_SUMMARY
          echo "|:------:|:------------------------------------------|" >> $GITHUB_STEP_SUMMARY
          echo "|Release|${{ needs.build-release.outputs.release_sha }}|" >> $GITHUB_STEP_SUMMARY
          echo "|Debug|${{ needs.build-debug.outputs.debug_sha }}|" >> $GITHUB_STEP_SUMMARY
